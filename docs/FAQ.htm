<table style="background-color:#ffffff;color:#000000;" border="0" width="1060" cellspacing="20" cellpadding="0">
<tbody>
<tr>
<td align="center" valign="middle" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:40px;font-weight:normal;">Frequently-asked Questions</span></td>
</tr>
<tr>
<td align="center" valign="middle" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:40px;font-weight:normal;">This FAQ is for Fauxdacious and how to use it's extra features not found in Audacious.</span></td>
</tr>
<tr>
<td align="left" valign="middle" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;"><ul>
  <li><a href="#1">1) What is Fauxdacious?</a></li>
  <li><a href="#2">2) Why Fauxdacious?</a></li>
  <li><a href="#3">3) How do I get and install Fauxdacious?</a></li>
  <li><a href="#4">4) Why is Fauxdacious not available prepackaged for my Linux distro like Audacious is?</a></li>
  <li><a href="#5">5) Do you collaborate with the Audacious team or is your relationship with them adversarial?</a></li>
  <li><a href="#6">6) How do I play videos?</a></li>
  <li><a href="#7">7) How do I play Youtube / Vimeo / etc. videos?</a></li>
  <li><a href="#8">8) How do I record a video, ie. save it to a file for future play?</a></li>
  <li><a href="#9">9) How do I play DVDs?</a></li>
  <li><a href="#10">10) How do I use custom equalizer and / or effects plugin presets for specific songs, directories, disks, etc.?</a></li>
  <li><a href="#11">11) How do I set custom presets for an entire subdirectory of song files (the way XMMS can) / OR use a custom directory preset file that was created in XMMS?</a></li>
  <li><a href="#12">12) How do I pipe media, cue-sheets, playlists, etc. into Fauxdacious from stdin?</a></li>
  <li><a href="#13">13) How do I play media to stdout for post-processing instead of through my speakers?</a></li>
  <li><a href="#14">14) How do I get Fauxdacious to just mute but continue streaming whenever paused - I want to mute commercials in my streaming radio station and either toggle over to another Fauxdacious instance where I have my music ready to play a couple songs -or- play a video in my web-browser during the break?  If I "pause" the station playing commercials, it'll resume at the BEGINNING of the commercials, or the connection will be lost.</a></li>
  <li><a href="#15">15) How do I save tag metadata (ie. song title, artist, cover-art, etc.) using the [Song Info ...] dialog or manually for online streams, CDs, DVDs, and files in audio-formats that do not support the metadata tag format used by Audacious?</a></li>
  <li><a href="#16">16) When I start up Audacious from the command line with a list of stuff to play, Audacious often creates a new "playlist", which is very annoying since I use the WinAmp Skins interface and don't see the previous ones it created, which gets annoying since I end up with a bunch of old, one-off playlists before I realise it!  How do I start up Fauxdacious with just a single playlist, or even just with the files I specified on the command line?</a></li>
  <li><a href="#17">17) How do I start up Fauxdacious with the equalizer turned OFF?</a></li>
  <li><a href="#18">18) How do I start up Fauxdacious with "Recording" (dubbing) turned ON?</a></li>
  <li><a href="#19">19) How do I start up a second "instance" of Fauxdacious or one that uses a configuration different than my normal "default" configuration?</a></li>
  <li><a href="#20">20) How do I control different running Fauxdacious instances using the Fauxdtool?</a></li>
  <li><a href="#21">21) How do I get Fauxdacious to randomly change "skins" when the playlist entry changes (like the old XMMS "Random Skin on Play" option)?</a></li>
  <li><a href="#22">22) How do I use local lyrics files and lyrics from embedded tags in the Fauxdacious version of the lyrics plugin?</a></li>
  <li><a href="#23">23 - FIXED) Why do I get a bunch of "dbus errors" when exiting Fauxdacious when using the Qt interface (Audacious doesn't do this), is it serious?</a></li>
  <li><a href="#24">24) Audacious v4.0 has now made Qt the default and rumor has it that they may be dropping GTK support?  Is Fauxdacious going to follow suit?</a></li>
  <li><a href="#25">25) How do I reverse the sort order when clicking on the playlist column-headers in either of the "non-Winamp-skins" interfaces?  Audacious only sorts them in ascending order.</a></li>
  <li><a href="#26">26) What is Fauxdacious latest version#, and do you follow Audacious versioning?</a></li>
  <li><a href="#27">27) Audacious's display of Shoutcast streams' titles is sometimes ugly (ie. "artist: Artist, title: Title", etc.) and, at best displays both the artist and title in the Title field, but I want title in the Title field and artist in the Artist field (like the rest of my local music file collection), and put the stream name in the Album field instead.  Also, Audacious has recently added a "Split title into artist and title on chars" option in their lyrics plugin related to this, but I don't see that here.  How can I fix this?</a></li>
  <li><a href="#28">28) How can I get the albumart plugin to actually show the album-cover image for songs, especially for streaming radio-stations that change songs dynamically, that include metadata?  Audacious either doesn't show any cover art and Fauxdacious only shows the cover-art image for the streaming station itself, if anything at all.</a></li>
  <li><a href="#29">29) My global Fauxdacious "user_tag_data" tag file is getting large and cluttered with all the songs and streams for which I've saved cover-art icons and tag metadata for streaming stations and songs in formats that don't support metadata tags in the audio-file itself.  Is there a way I can have Fauxdacious save this data either in a "user_tag_data" file specific to a given album directory or perhaps in a tag-file associated with the specific song/stream, when I use the Fauxdacious [Song Info ...] metadata tag editor window?</a></li>
  <li><a href="#30">30) When recording a song from a streaming station, I want to save the metadata the station provides (and / or the album-cover image that the albumart plugin finds for it) while the song is recording - Audacious won't let me (since metadata can't be saved in a stream) and Fauxdacious will just overwrite the streaming station's name, etc. itself in the global "user_tag_data" file, so I have to edit it manually.  Is there an easier way?</a></li>
  <li><a href="#31">31) The Search Tool in Audacious now "monitors song file additions on my file-system and has also added a few cool new features which DON'T seem to be available in Fauxdacious.  How do I activate these in Fauxdacious?</a></li>
  <li><a href="#32">32) I use the Qt version of Audacious and love the new StreamTuner plugin for selecting IHeartRadio stations, but unlike your helper script that loads the station's icon and other info when adding an IHeartRadio station's website, there is no icon, genre, or title?  Audacious also clears my playlist and sets it to just the station I selected, but I just want to ADD stations to my current playlist!</a></li>
  <li><a href="#33">33) Most of my music is in formats, like mp3, ogg, etc. which contain embedded album-cover images in the file as Id3v24 tags.  Audacious supports displaying them, but NOT adding / changing them, so in Faudacious, the album art accumulates in the albumart directory on my hard drive and I have to keep a large "user_tag_data.tag" file full of references to these files!&nbsp;  Isn't there a better way?</a></li>
  <li><a href="#34">34) I like Audacious's Lyrics plugin for displaying song lyrics, but I have files with the lyrics already embedded in the tags, but the Lyrics plugin ignores them and still has to fetch them from the web.</a></li>
  <li><a href="#35">35) I need the Equalizer window to stay up after I exit and restart Audacious / Fauxdacious, but it doesn't, as I use the non-skinned interfaces.&nbsp;  Instead, I have to pop it back up manually.  Audacious has been asked to fix this, but hasn't yet, can you?</a></li>
  <li><a href="#36">36) What are these "helper scripts" you keep referencing and how do I install and get them working?</a></li>
  <li><a href="#37">37) How do I take advantage of Timestamped lyrics and have them highlight the current line while playing?!</a></li>
  <li><a href="#38">38) My Album Art and / or Lyrics plugin is still not working!  What am I missing?</a></li>
  <li><a href="#39">39) Audacious now supports Qt on Windows, why doesn't Fauxdacious?</a></li>
  <li><a href="#40">40) How can I briefly override normal song-advance (next song, next shuffle, etc.) order in the currently-playing playlist to instead play one or more selected songs next?</a></li>
  <li><a href="#41">41) *NEW!* How can I add a new entry, then jump directly to it next?</a></li>
  <li><a href="#42">42) What is this "Mini-Fauxdacious" plugin under General Plugins (Audacious doesn't offer this)?</a></li>
  <li><a href="#43">43) How do I start Fauxdacious and load more than one playlist or split command-line entries into multiple playlists?</a></li>
  <li><a href="#44">44) What are these "channel" images that appear in addition to the Album-art plugin image displayed?</a></li>
</ul>
</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="1" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">1) What is Fauxdacious?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Fauxdacious is a fork of the popular Audacious Audioplayer app. which adds many new features, but which retains nearly all the interface and features of Audacious.  Long-time Audacious users should find Fauxdacious an almost complete drop-in replacement for Audacious.  However, since it is now a completely separate program, Audacious users can install and try out Fauxdacious without any (known) risk to their existing Audacious installation or configuration.&nbsp;  If you wish to copy your existing Audacious configuration for starters (nearly all your settings will carry over seemlessly to Fauxdacious) in Fauxdacious, simply:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">cd ~/.config; mkdir fauxdacious; cp -R audacious/. fauxdacious/</code></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="2" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">2) Why Fauxdacious?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Fauxdacious has it's roots back around 2011 when I (the author) began experimenting with a few "hacks" to add some extra command-line options and tools to Audacious version 1.6 or so, which the Audacious team was not interested in including.&nbsp;  The real forkoff came in 2015 with Audacious v3.6 when I created a video-playing option for the ffmpeg plugin.&nbsp;  I felt that since Audacious included "visualization plugins" already, why not include one for actually displaying the video part of audio streams that contained video?&nbsp;  After much work to add video play, I submitted the patched plugin to Audacious as a patch, but the Audacious team made it clear that they were not interested in supporting / maintaining that feature.&nbsp;  They suggested using a video player such as VLC&nbsp;.  I, however, really like Audacious and it's audiophileish sound-improving effects plugins and Winamp Skins interface, much preferring Audacious to VLC, and preferred having a single "go-to" media player for playing all my media.&nbsp;  Therefore I decided to simply "fork" the code and maintain a separate Audacious branch that supported this along with it's growing list of feature patches, because I felt that other Audacious-lovers would also be interested in these new features.&nbsp;  I've also created new logos and and changed the branding to the new name "Fauxdacious".&nbsp;  I came up with this name by altering the name "Audacious" to have the French "Faux" like "Faux Pas" meaning "fake" or "not exactly the real thing" and liked the way it sounded!&nbsp;  It's pronounced either "Faw-d`&#230;-shuhs" (rhiming with Audacious) or "F&#333;-d`&#230;-shuhs".&nbsp;  I made the logo by using the basic "audacious" logo but adding a row of speakers instead of bubbles, a base ("F" cleff for the "F", and the slightly-rocked "X" from the default XMMS skin's logo in the lower right.&nbsp;  I made a separate logo for the Windows version replacing the rocked "X" with a rocked "MS-Windows flag logo" that contains a swirled "X".&nbsp;  The round icon replaces the "a" in a bubble with the aformentioned base-cleft "F".&nbsp;  NOTE:&nbsp;  I created this name and these logos and reserve all implied copyright rights to them as unique trademarks of "Fauxdacious"(tm).&nbsp;  They are not to be used for any other purpose without my explicit written permission.&nbsp;  The software code, a derived work, however is fully open-source" subject to the BSD license (the same license that Audacious uses) and you are free to use, modify and re-release your changes subject to those terms (so long as you change the name and logos).</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="3" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">3) How do I get and install Fauxdacious?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Download the latest source code for both Fauxdacious and the Fauxdacious Plugins from my official <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://github.com/wildstar84" target="altwindow" rel="nofollow">Github site</a>.  Then follow the instructons in the <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://raw.githubusercontent.com/wildstar84/fauxdacious/master/README" alt="README" target="altwindow" rel="nofollow">README</a> file.  You can also view the <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://github.com/wildstar84/fauxdacious/blob/master/Changes" target="altwindow" rel="nofollow">latest Change Log</a>.  NOTE:&nbsp;  If you want to run Fauxdacious on M$-Windows, simply download the executable <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://github.com/wildstar84/fauxdacious-windows-easyinstaller" target="altwindow" rel="nofollow">easy-installer</a> for an easy click-and-run installation!</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="4" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">4) Why is Fauxdacious not available prepackaged for my Linux distro like Audacious is?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Because packaging a project this complex for Debian is very difficult to do, but I am hoping to accomplish it some day.&nbsp;  (Note:&nbsp;  You can always bug your distro's package-managers, extolling the benefits of Fauxdacious over Audacious, direct them here to our beautiful and well-documented site and GIT, and ask them nicely to package it.&nbsp;  If people do that, perhaps one, then more will!)&nbsp;  I'm also disinclined to attempt a "Snap" or "Flatpack" version either for similar reasons and because Audacious has discouraged some of their users from using their software packaged that way due to having issues getting it to fully work properly.&nbsp;  NOTE:&nbsp;  M$-Windows users can already download and install Fauxdacious for Windows using <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://github.com/wildstar84/fauxdacious-windows-easyinstaller" target="altwindow" rel="nofollow">the built-in extractor / installer</a>, however that version will be the latest stable ("final") release, behind the (rolling) GIT site's most recent ("beta" / "devel") commits.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="5" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">5) Do you collaborate with the Audacious team or is your relationship with them adversarial?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Yes, while of course I have competitive juices and am proud of my work on Fauxdacious, I owe a great debt to the Audacious project for even making this possible.&nbsp;  My ultimate goal would be to see all of my work incorporated into mainline Audacious and for my project to simply disappear and be swallowed up by them.&nbsp;  However, I know that will not happen due to differences in philosophies and goals between our projects.&nbsp;  I continue to incorporate their development work into Fauxdacious and continue to share new ideas and development done here with them.&nbsp;  Sometimes they include some of my work into Audacious and other times not.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="6" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">6) How do I play videos?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">For regular video files, ie. .avi, .mov, .mp4, .m4a, .flac, etc. simply go to [Settings].[Plugins].[Visualization], and check the box to activate the new "Video Display" plugin!  In short, Fauxdacious should play (out-of-the-box) pretty much any video that FFmpeg's "ffplay" will play EXCEPT videos that do NOT have an audio stream (video-only streams) as audio is Fauxdacious' primary job and video is essentially a visualization.&nbsp;  NOTE:&nbsp;  If video seems "jittery", raise the "Video packet queue size" slightly (in [Settings].[Plugins].[Input tab].[FFmpeg Plugin].[Settings].&nbsp;  If video and audio are noticably out of sync, lower this value and perhaps disable some of your "Effects" plugins.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="7" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">7) How do I play Youtube / Vimeo / etc. videos?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">These video stream urls are not normally directly playable, but link to a temporary stream url that "times out" after a period of time and that to my knowledge, only "youtube-dl" knows how to extract.&nbsp;  Fauxdacious CAN play them however, but it requires a helper script written in Perl (included)!  You will need to do the following (one-time setup):</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;"><B>Windows users</B>:&nbsp;  All you should need to do is install youtube-dl, and go to [Settings].[Advanced] and in the box under "URL-Helper program?:" type in:&nbsp;   "FauxdaciousUrlHelper.exe" and change the "Allow URL-helper:" dropdown from "Never" to "URLs NOT in playlists", and [Settings].[Song Info] and check the "Save unsavable metadata to file" box, and you should be all set!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;"><B>Linux/Mac/Unix users</B>:&nbsp;  You must copy the script file:  "FauxdaciousUrlHelper.pl" from the "contrib" directory to somewhere in your executable path ie. /usr/local/bin/.&nbsp;  Then, depending on your Linux system, you will likely also need to install some additional Perl modules from CPAN (https://www.cpan.org), (See <a href="#36">FAQ #36</a> for more detail on this) which is usually not difficult to do.&nbsp;  The additional modules (which should be installed by the Perl package manager when you install "StreamFinder") are:  "StreamFinder", "LWP::Simple", "LWP::UserAgent", "HTTP::Cookies", and "URI::Escape".&nbsp;  NOTE:&nbsp;  You will also need to install either the "youtube-dl" package for your distro or download and install it yourself.  "youtube-dl" is a separate program that handles the actual "downloading" of the video.&nbsp;  In the case of Fauxdacious, the video is not actually downloaded to a file on your hard disk, but simply translated into a playable stream and metadata and a "cover-art" image is downloaded.&nbsp;  NOTE (2):&nbsp;  You will also need to go to [Settings].[Advanced], and add the full path and filename of the helper script you just copied over into the "URL-helper program?" field, and toogle the "Allow URL-helper:" dropdown to something other than "Never" ("Urls NOT in playlists" is reccomended except when you intend to load several Youtube-videos at once in a playlist, which can cause playlists with URLs to load VERY SLOWLY), and go to [Settings].[Song Info] and check the "Save unsavable metadata to file" box.  Once these programs and modules are installed and options set, Fauxdacious should automatically play Youtube and Vimeo, etc. video urls as if they were any other audio / video stream.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;"><B>In summary</B> ONE TIME:&nbsp;  (Windows users only need to do steps 1, and 4-6) before playing Youtube / Vimeo videos, do the following:</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">1) Install youtube-dl (a separate, freely-available program).
<BR>2) Install Perl modules:  "StreamFinder", "LWP::Simple", "LWP::UserAgent", and "URI::Escape".
<BR>3) Copy [source-dir]/fauxdacious/contrib/*.pl to /usr/local/bin.
<BR>4) Go to [Settings].[Advanced] and change the [Allow URL-helper:] box to "URLs NOT in playlists".
<BR>5) Go to [Settings].[Song Info] and check the "Save unsavable metadata to file" box.
<BR>6) Also change the "URL-Helper program?" field to:&nbsp;  "/usr/local/bin/FauxdaciousUrlHelper.pl" ("FauxdaciousUrlHelper.exe" for Windows users) under [Settings].[Advanced].

<BR><BR>NOTE:  ALL users will need to repeat steps 4-6 once for any new Fauxdacious instances (See <a href="#19">FAQ #19</a> for creating instances) you create and wish to 
play videos on.&nbsp;  Also, if you're still having trouble with youtube videos, make sure you update youtube-dl (or yt-dlp) to it's latest version!

<BR><BR>Then, to play a video:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">fauxdacious https://www.youtube.com/watch?v=#######</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Under the hood, Fauxdacious will create or add to a temporary file:  "~/.config/fauxdacious[-instancename]/tmp_tag_data" which will have the actual streaming url, something like "[https://r6---sn-q4fl6n7s.googlevideo.com/videoplayback...", a title line, etc. and a comment line containing the path to the downloaded "cover-art" file, ie.  Comment=file:///$HOME/.config/fauxdacious/####.jpg.  This file and the downloaded cover-art file will be deleted when Fauxdacious is restarted with "-D".</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="8" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">8) How do I record a video, ie. save it to a file for future play?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">BEFORE starting playback, go to [Settings].[Plugins].[Input tab].[FFmpeg Plugin], Check the box for [Record video to file].  You can also change the default filename from "/tmp/lastvideo" to whatever you like.&nbsp;  Then, play the video all the way through but don't let Fauxdacious advance to the next entry, but stop play (An easy and handy way to do this is drag your Youtube video to the bottom of your playlist and turn [Repeat] OFF), then go back to [Settings].[Plugins].[Input tab].[FFmpeg Plugin], uncheck the [Record] box (to prevent overwriting), then you have the video in the file you chose (default "/tmp/lastvideo"), which you'll likely want to move and rename to something with a proper extension, ie. ".m4a" usually works.&nbsp;  
If you moved and/or renamed the video file, you will need to move the saved video file to wherever you moved the saved video file and edit the user_tag_data.tag file, as the metadata saved is associated with the previous name and location.&nbsp;  NOTE:&nbsp;  The displayed "length" of the new video will be the same as the original, even if you only recorded part of it.&nbsp;  I have not figured out a way yet to correct the length for partial recordings.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="9" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">9) How do I play DVDs?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Go to [Settings].[Plugins].[Visualization], and check the box to activate the new "Video Display" plugin!&nbsp;  IF playing commercial (encrypted) DVDs (AND it is LEGAL for you to do so in your jurisdiction!), you'll will need to install "libdvdcss".&nbsp;  NOTE:&nbsp;  Windows users will need to obtain and copy libdvdcss.dll to the Fauxdacious bin directory (the same directory fauxdacious.exe and libdvdread.dll reside in) each time you install or update Fauxdacious (Sorry, I can't legally include this in the installer)!  For everyone else, if you are already doing this in VLC or some other open-source video player on your machine, then you probably already have this installed.  Then, either start Fauxdacious with:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">fauxdacious dvd://</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">or open Fauxdacious the usual way and go to [Services] menu and select either "Add DVD" or "Play DVD".&nbsp;  If you have trouble playing a specific DVD, you can adjust the settings in [Settings].[Plugins].[Input tab].[DVD Plugin].&nbsp;  If your dvd device is unusual, ie. something other than "/dev/dvd", change this box.&nbsp;  Make sure the [Play video stream in popup window...] box is checked (unless you just want audio).&nbsp;  You'll probably want the [Highlight menu buttons] box checked.&nbsp;  To avoid clutter in your playlist, most users will want "Only Title Track in Playlist" checked.  If the DVD menu doesn't seem to work (some DVDs just don't), you may want to check the "Only Longest Track in Playlist" box, which is usually just the main feature movie.&nbsp;  If none of the "Only..." boxes are checked, each "track" file on the DVD will appear in the playlist (giving it a cluttered appearance, and is not usually very useful).  

"Continue at end of menus" and "Skip Menus" should only be checked if a DVD's menus don't work otherwise, as this can cause some DVDs to crash Fauxdacious.&nbsp;  It's also helpful to have one or the other checked (experiment) if just playing audio (in which case there's no way for the user to interact with the DVD menus).

Check the box for [Allow Custom Tag-files] to allow usage of custom tag files which you can either create manually and/or use the save [Song Info ...] window to create and save metadata for the DVD tracks.&nbsp;  The custom tag file for a DVD will be "~/.config/fauxdacious[-instancename]/&lt;DVD_TITLE&gt;.tag".

NOTE:  This is also true for audio-CDs ("~/.config/fauxdacious[-instancename]/&lt;DISK-ID&gt;.tag"), except audio-CDs can also fetch metadata for individual tracks from freedb.com, or musicbrainz.com using the cover-art "helper" script (mentioned next paragraph below) and create the custom tag file (along with downloading any cover-art image) for you the first time you play the CD.

To have Fauxdacious attempt to fetch the DVD's "cover" image from the internet, go to [Settings].[Advanced] and add the following to the "Cover Art-helper program?:" field:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">/usr/local/bin/FauxdaciousCoverArtHelper.pl</code>  NOTE:  For Windows users, this will just be:  <code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">FauxdaciousCoverArtHelper.exe</code> (it's already in the path)!</td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Linux/Mac/Unix users:  Make sure the script file "FauxdaciousCoverArtHelper.pl" is in /usr/local/bin, otherwise specify it's location and make sure it's executable).&nbsp;  Then, depending on your Linux system, you will likely also need to install some additional Perl modules from CPAN (https://www.cpan.org), (See <a href="#36">FAQ #36</a> for more detail on this) which is usually not difficult to do.&nbsp;  The additional modules are:&nbsp;  "LyricFinder" (v1.20 or higher), "File::Copy", "HTML::Entities", "LWP::Simple", "LWP::UserAgent", and "URI::Escape".&nbsp;  NOTE:&nbsp;  The cover-art helper script may not be able to fetch a proper art image for all DVDs, in which case, it will not have one.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="10" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">10) How do I use custom equalizer and / or effects plugin presets for specific songs, directories, disks, etc.?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE:&nbsp;  This is <B>NOW available</B> in the Qt interfaces too (as of v3.10)!  To set custom equalizer presets for a specific song, stream, or CD / DVD disk, first start playing it.&nbsp;  Then open up the Equalizer window and make sure both the [Auto] and [Equalizer] buttons (or checkboxes, depending on interface) are selected.&nbsp;  Then press the [Preset(s)] button.&nbsp;  A dialog window will pop up.  There are three additional checkboxes on this window:&nbsp;  "Use entry's local dir..." specifies try to save the presets in the same directory as the song file / cue-sheet file is in (only applicable if the song is a local file, not a disk or url).&nbsp;  Otherwise, the custom presets will be saved in the ~/.config/fauxdacious[-instancename]/ directory.&nbsp;  The [Exclude arg. lists from urls...] box only applies to URLs.&nbsp;  Checking this removes the "?..." crap off of the URL before naming the custom preset file.&nbsp;  This is useful if you don't want to create long nasty preset file names for every possible URL on the site, but can limit customization.&nbsp;  Experiment as ymmv.&nbsp;  Uncheck the [Save Effects...] checkbox if you only want to save equalizer presets for the song and not the current list of Effects plugins being used.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Next, choose [Export], then [Preset File] from the menu.&nbsp;  A window should pop up with the proper name for the custom preset file filled in and the current directory set to either the local file's path or ~/.config/fauxdacious[-instancename]/ directory (depending on whether it's a local file and whether the [Use entry's local directory...] box is checked).&nbsp;  Then [Save] the preset file.  If instead, the filename says "&lt;name&gt;.preset", then either the song is NOT actually PLAYING, you selected "EQF file" instead of "Preset file", or Fauxdacious was unable to determine a valid name, ie. from a really ugly URL.&nbsp;  In this case try cancelling the file dialog window, toggle the "Exclude arg. lists from URLs" checkbox, and try the Export again.&nbsp;  Once saved and activated, the [Preset(s)] button should light up indicating that Fauxdacious is using a custom preset file for this song entry.&nbsp;  Now, adjust the equalizer how you want it for this song, and check / uncheck any Effects plugins you want on / off for it (if "Save Effects..." checked), then repeat the [Save] step to re-save the custom preset file with new values as the custom presets for this entry.&nbsp;  NOTE:&nbsp;  Curretly, only the preset plugins' status (on or off) are saved, not the specific current settings for each one (that has extra settings options).&nbsp;  When the entry stops playing and Fauxdacious advances to the next song entry, the equalizer settings and Effects plugins selections should return automatically to the defaults (what they were before you saved the custom file the first time and adjusted them).&nbsp;  The [Preset(s)] button's light / indicator should go off as well.&nbsp;  NOTE:&nbsp;  The song entry must be actually PLAYING when all this is being done!</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="11" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">11) How do I set custom presets for an entire subdirectory of song files (the way XMMS can) / OR use a custom directory preset file that was created in XMMS?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">"dir_default.preset" is the name XMMS (and Fauxdacious) uses to create custom directory presets.  If you haven't used XMMS to create them or don't want to use those, you can change this name to whatever you want by editing your ~/.config/fauxdacious[-instancename].config file with your favorite text editor and change "dir_default.preset" in the following line:<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">eqpreset_dir_default_file=dir_default.preset</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">to some other preset file name, OR remove the line if you don't want to allow for directory-based presets at all as an option.  Then with a song playing in the directory for which you wish to set a custom directory preset for, follow the same procedure outlined above for saving the custom preset file, but make sure the BOTH the "Use entry's local directory..." and "Save as Directory-wide..." boxes are checked, then when preparing to save the file, the song's filename part of the preset file name ("&lt;song-filename&gt;.preset") should read "dir_default.preset" or whatever you specified above, for "eqpreset_dir_default_file", and save the preset file.  This preset file will be used for equalizer and optionally Effects plugin settings for every song in this directory (but NOT subdirectories) EXCEPT for any that have a custom song-specific preset file saved for them.

Fauxdacious searches for custom preset files in the following order:

1) &lt;path-to-song-file&gt;/&lt;song-filename&gt;.preset
2) ~/.config/fauxdacious[-instancename]/&lt;song-filename&gt;.preset
3) &lt;path-to-song-file&gt;/dir_default.preset (if eqpreset_dir_default_file set)

Only #2 is used for non-local file entries, ie. URLs, CDs, and DVDs.
For CDs, the &lt;song-filename&gt; is the CD's disk-ID, for DVD's it's the DVD Title.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="12" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">12) How do I pipe media, cue-sheets, playlists, etc. into Fauxdacious from stdin?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">In addition to most media, Fauxdacious allows cue-sheets, playlists, and plain old text lists of entries to be piped into Fauxdacious via stdin.&nbsp;  Fauxdacious originally did this but required the user to provide an extension as a "hint" so that it could determine what type of media was being piped in since probing to determine media type would read stdin and there was no way to rewind it to play.&nbsp;  For example:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">cat mysong.mp3 | fauxdacious -.mp3</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Audacious later added this ability (at my urging) along with some black buffering magic that allowed Audacious to first probe stdin and determine the media type without rewinding, thus no longer needing the extension-hint!&nbsp;  Fauxdacious now includes these improvements to Audacious so the extension hint is no longer required for most media (but is still allowed, see below), ie.:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">cat mysong.mp3 | fauxdacious -</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">However, Fauxdacious also permits non-media to also be piped in, but the underlying Audacious code does not support "probing" for playlists and cue-sheets, thus still REQUIRING the extension-hint for these types of input.&nbsp;  Therefore, we've retained the extension-hint (now optional for most media) for consistancy, but also to allow Fauxdacious to skip the overhead of probing when the media type is known by extension.&nbsp;  There are three exceptions:</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">1) Certain media files (.mp4 in particular sometimes) have been known to FAIL when piped in and probed thus still necessitating including the extension hint to get them to play via stdin.&nbsp;  A handful seem to work the new way but not the old too (so try both if needed).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">2) If no extension-hint is given and Fauxdacious fails to probe and find a suitable media plugin for the input, it will "fall back" by trying to treat the input stream as a text list (m3u) playlist and, if successful, load the playlist from stdin without the extension hint.&nbsp;  Cue-sheets and all other playlist types (ie. .cue, .pls, etc.) require the extension hint to load from stdin.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">3) A special case for strictly text list input from stdin is provided by specifying a double-dash ("--") for stdin whicn, instead of loading the incoming list of entries as an m3u "playlist" will treat them as if entered on the command-line (much earlier in the program startup).  This way is necessary if attempting to load additional playlist entries to an already-running instance of Fauxdacious (since the additional files must be loaded BEFORE the second command hands off control to the running instance).&nbsp;  Example:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">ls -d A*.mp3 | fauxdacious -Dc - &amp;
<BR>ls -d B*.mp3 | fauxdacious -e --</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">The second command will add (enqueue) all mp3 files in the current directory starting with "B" to the bottom of the playlist in the already-running instance of Fauxdacious started by the first command, then the 2nd command will exit.&nbsp;  NOTE:&nbsp;  It's not PLAYING the songs themselves here through stdin, but the playlist (list of entries), thus song-playing is seekable and replayable.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="13" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">13) How do I play media to stdout for post-processing instead of through my speakers?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">There are two ways of doing this:&nbsp;  1) The FileWriter plugin has an additional option to write it's output to stdout instead of to a named file.&nbsp;  This can be used by either selecting the FileWriter plugin or by using the "Record" option to dub (tee) output to FileWriter.  In either case, the FileWriter plugin must be set to write to stdout and Fauxdacious must be invoked from the command line with a target for stdout, ie:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">fauxdacious [stuff-to-play] >/tmp/outputfile.mp3
<BR>fauxdacious [stuff-to-play] | mplayer -</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Otherwise, stdout will dump tons of "garbage" right out to your terminal (pretty useless)!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">2) The other (new, easier) way is to add the "-o" or "--out=&lt;ext&gt;" command-line option to Fauxdacious when starting.&nbsp;  "&lt;ext&gt;" can be either "wav", "mp3", "ogg", or "flac".  If just "-o" is specified, it is the same as "--out=wav".</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">This method automatically directs Fauxdacious to send all output to stdout and in the format selected without having to specify "stdout" in the FileWriter options or reset anything when done.  Fauxdacious will remember which audio output plugin ("Alsa", "Pulseaudio", etc.) you were using and what options you had FileWriter set to for recording / dubbing, and reset everything back when done.&nbsp;  Here's a true Unix piping example to convert a bunch of files to a single .wav file in "headless" mode (no GUI).&nbsp;  This will run Fauxdacious to do the conversion, then exit and restore everything to normal:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">ls -d * | fauxdacious -DcHo - >/tmp/newfile.wav</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">If using the first way (FileWriter / Record), there are two additional plugin configuration options under stdout:&nbsp;  "close after song chg." and "close when recording stopped.".&nbsp;  They are useful when piping directly out to a stored file (as opposed to piping to another program downstream).&nbsp;  The first says to "close" (send an EOF, etc.) to stdout when the song changes (either by advancing to the next song entry or when title changes in a radio-station URL).&nbsp;  Use this when recording (dubbing) a song streaming stations, etc. as it will ensure a properly created song file of the LAST song recorded when recording is stopped (but any prev. song written out will be lost).  Unchecking ensures that everything written to stdout during the recording is included in the file produced by stdout as a single file.&nbsp;  However, stopping recording and starting a new recording will overwrite stdout with whatever's recorded by the second recording!&nbsp;  In order to create a continuous recording by stringing together everything from each recording (until Fauxdacious itself is stopped), uncheck the "close when recording stopped" box.&nbsp;  Also, uncheck both boxes if piping to another downstream program instead of a stored file.&nbsp;  Using the "-o/--out=&lt;ext&gt;" option will automatically toggle both these boxes off while piping, then reset them to their prev. values when Fauxdacious exits.&nbsp;  The tradeoff here though is that if both boxes are unchecked and you're piping to a stored file, the tag metadata from the first song is likely used for the file.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="14" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">14) How do I get Fauxdacious to just mute but continue streaming whenever paused - I want to mute commercials in my streaming radio station and either toggle over to another Fauxdacious instance where I have my local music ready to play a couple songs -or- play a video in my web-browser during the break?&nbsp;  If I "pause" the station playing commercials, it'll resume at the BEGINNING of the commercials, or the connection will be lost.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Fauxdacious adds the "-P" option just for this annoying situation!  If Fauxdacious is started with "-P", pressing the [Pause] button will silence whatever's playing in that instance without changing or affecting your volume controls!&nbsp;  Pressing [Pause] again will restore playing volume at that point in play and the station will never know that you "skipped" all their commercials!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">You can also now toggle this feature dynamically either by going to [Settings].[Playlist] and toggling the checkbox labeled [Pause mutes instead of pausing] OR using fauxdtool:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">fauxdtool [instance instancename] --playback-pausemute [0|1]
<BR>
<BR>"1", "T[rue]", "t[rue]", "Y[es]", "y[es]", or no argument turns Pausemute ON.
<BR>"0", "F[alse]", "f[alse]", "N[o]", or "n[o]" turns it OFF.</code></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">To check the current status of PauseMute using fauxdtool in a batch file, do:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">fauxdtool playback-doespausemute
<BR>if [ "X$?" = "X1" ]; then
<BR>&nbsp;&nbsp;&nbsp;&nbsp;echo "pause will just mute"
<BR>else
<BR>&nbsp;&nbsp;&nbsp;&nbsp;echo "pause will pause"
<BR>fi</code></td>
</tr>
<tr>
<tr>
<td align="left" valign="top" width="100%"><span id="15" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">15) How do I save tag metadata (ie. song title, artist, cover-art, etc.) using the [Song Info ...] dialog or manually for online streams, CDs, DVDs, and files in audio-formats that do not support the metadata tag format used by Audacious?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Unlike Audacious, Fauxdacious can still save your custom tag data associated with song entries whether they support it or not.&nbsp;  Fauxdacious first tries to save the tag data in the song file itself (ID3, Ape, or Vorbis tags), and failing that, can save it to a file, and read the metadata from that file whenever that song entry is played, as if the tag data were saved in the song entry file itself (NOTE:&nbsp;  These tags saved to tag files will not be present if playing in Audacious or another media player though - but if saved embedded (supported formats), they will)!&nbsp;  For most entries, the [Song Info ...] dialog window will save the tag data in either a tag file named after the song file itself (+.tag extension) in the same directory, or the user_tag_data.tag file in the song file's directory, or the common tag file:&nbsp;  "~/.config/fauxdacious[-instancename]/user_tag_data" (see [Settings].[Song Info].[Fauxdacious Extras] and <a href="#29">FAQ #29</a>).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">For disks (CDs and DVDs), it will be saved in a separate custom tag file "~/.config/fauxdacious[-instancename]/&lt;DISK-ID&gt;.tag.&nbsp;  For videos and podcasts downloaded via youtube-dl through the helper-script (which expire and thus are considered "one-off" plays), a separate "tmp_tag_data" file (in ~/.config/fauxdacious[-instancename]/) is used.&nbsp;  For other streams (non-file entries), in the common tag file cited above.  CDs and DVDs also store tag data in "tmp_tag_data" while they are playing.  When playing an entry, Fauxdacious will look for tag data to fill in the metadata fields first in "~/.config/fauxdacious[-instancename]/tmp_tag_data", then (if song is a local file) for a matching tag file (ie. songname.mp3.tag), then user_tag_data.tag in the directory the song file is in; then in "~/.config/fauxdacious[-instancename]/user_tag_data".&nbsp;  If song is a CD/DVD track, first, on the CD itself ("CD-Text" option); then "~/.config/fauxdacious[-instancename]/&lt;DISK-ID&gt;.tag" ("Use custom tag files" option); and last, search MusicBrainz on the web ("Allow URL helper" option).  These tag files are all editable text files.&nbsp;  One of the argument fields for each tag is "Precedence" which can be set to "DEFAULT", "OVERRIDE", or "ONLY" (or "NONE" to "comment" it out entry without deleting), which while processing the above tag sources, will either use as DEFAULT (low priority), OVERRIDE any value from a previous metadata source found, or ONLY use metadata from THIS tagfile.&nbsp;  To turn these features on, go to [Settings].[Song Info] and check the [Save unsavable metadata to file] box.&nbsp;  If unchecked, then Fauxdacious will be limited to handling most metadata the same way Audacious does.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Another special field is the "Comment" field, which can be any text comment, but if set to the full path (URI) of a valid image file name, will be used as the "cover art image" for the song entry.&nbsp;  If there are two full image file paths (URIs) separated by a semicolon, then the second will be used as the "channel" icon in the song-info area when the AlbumArt plugin is active and displaying the first image file.&nbsp;  The Song Info (editing) box provides an option to locate a desired album-art file and place it's URI into the comment box via the GUI, and the one used for the current song is updated to the current time to place it at the top of the file-selection list (when sorted by "most recent") to facilitate locating the desired image).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE:&nbsp;  See also the [Allow Custom Tag-files] options under [Settings].[Plugins].[Audio Cd/DVD plugins] configurations for allowing these custom tag files for individual disks.  By default, when playing audio CDs, Fauxdacious will attempt to download track metadata from CDDB (like Audacious) (if [Use CDDB] option checked), and cover art and track data using the cover-art helper from the web (either or both can be turned off).&nbsp;  If any metadata or art found, will then auto-create a custom tag file (&lt;DISK-ID&gt;.tag, mentioned above IF [Allow Custom Tag-files] option checked) for that disk.  This saves having to reseek this data from the web on subsequent plays.&nbsp;  You can then use the [Song Info ...] window to change any of these fields for any track, and they'll be updated there!  DVDs work the same way, except only cover art is currently fetched and the tag file is named "&lt;DVD-TITLE&gt;.tag".  You can then add artist, change title, etc. in the [Song Info ...] window.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="16" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">16) When I start up Audacious from the command line with a list of stuff to play, Audacious often creates a new "playlist", which is very annoying since I use the WinAmp Skins interface and don't see the previous ones it created, which gets annoying since I end up with a bunch of old, one-off playlists before I realise it.&nbsp;  How do I start up Fauxdacious with just a single playlist, or even just with the files I specified on the command line?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">To start up Fauxdacious with just a single playlist and discard any other existing ones, start with the "-D" (Delete playlists) option.&nbsp;  To clear the current playlist of any existing entries, start with the "-c" (Clear playlist) option.&nbsp;  To start Fauxdacious with a completely clean slate, start up with both "-D" and "-c" (or "-Dc").</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="17" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">17) How do I start up Fauxdacious with the equalizer turned OFF?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Start up Fauxdacious with the "-z" option.  Fauxdacious will remember whether it was on before you started up and restore that when exiting.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="18" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">18) How do I start up Fauxdacious with "Recording" (dubbing) turned ON?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Start up Fauxdacious with the "-R" option.
NOTE:  This will be ignored if the "-o/--out=&lt;ext&gt;" option is also specified!</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="19" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">19) How do I start up a second "instance" of Fauxdacious or one that uses a configuration different than my normal "default" configuration?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">There are three different ways to start up multiple or different Fauxdacious instances:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">1) fauxdacious --new=instancename</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">This is the preferred way as it allows you to "name" your different configurations (configuration directories) in order to have Fauxdacious set up multiple ways for different scenarios.  "instancename" can be any string of letters and digits up to 40 characters.&nbsp;  To create a completely "new" instance that you've never used before, just specify any name you choose, and Fauxdacious will create a brand new "~/.config/fauxdacious-&lt;instancename&gt;/" directory along with a factory-default "config" file.&nbsp;  If the directory already exists (Fauxdacious has been started before with this instance name), that configuration directory will be used.&nbsp;  This way, unlike in Audacious, you can have more than nine different configurations named to where you can remember what they're for!</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">2) fauxdacious -# (or fauxdacious --new=#)</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">This is the "Audacious way" of creating new instances is by specifying a single digit, which Fauxdacious will use as the instance "name".&nbsp;  NOTE:&nbsp;  Fauxdacious creates a corresponding "~/.config/fauxdacious-#/" if it does not already exist, just as if you'd given the instance an alphanumeric name.&nbsp;  Audacious permits -1 .. -9, but -1 is the same as the default instance.  In Fauxdacious, -0 refers to the default instance and -1 .. -9 are separate instance names.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">3) fauxdacious -n</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">This creates a new, separate running (but unnamed) Fauxdacious instance using the default config directory ("~/.config/fauxdacious/").&nbsp;  I've never found this to be of much use, but for each multicharacter argument that takes a value, the code requires a corresponding single-character version with no arguments.&nbsp;  NOTE:&nbsp;  This is experimental (I don't use it / use at your own risk!), as it involves two instances fighting over the same configuration files at the same time.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="20" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">20) How do I control different running Fauxdacious instances using the Fauxdtool?</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">("fauxdtool" is the Fauxdacious-equivalent of "audtool")&nbsp;  To control the default instance:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">fauxdtool [--command...]</code></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">To control a different instance name (--new=&lt;instancename&gt;):</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">fauxdtool instance &lt;instancename&gt; [--command...]</code></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">To control a numeric instance (created the Audacious way with -#):</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">fauxdtool -# [--command...]</code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">One can not access nor control an unnamed instance created with "-n" with the Fauxdtool though.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="21" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">21) How do I get Fauxdacious to randomly change "skins" when the playlist entry changes (like the old XMMS "Random Skin on Play" option)?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Go to [Settings].[Appearance], switch Fauxdacious's "Interface" to the "Winamp Classic Interface", then check the box at the bottom of the window labeled [Random skin on play].  Fauxdacious will randomly change it's "skin" each time the playlist advances.&nbsp;  NOTE:&nbsp;  Streaming radio stations that change song titles between songs does NOT cause the skin to change, however.&nbsp;  I may look into adding that in the future if there is any demand for it.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="22" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">22) How do I use local lyrics files and lyrics from embedded tags in the Fauxdacious version of the lyrics plugin?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">When the lyrics plugin is active and Fauxdacious successfully fetches lyrics from the internet, there's a new button (right-click menu item) labeled [Save Locally] on the GTK version.&nbsp;  (On the Qt version, rightclick on the Lyric window for a menu with these options).&nbsp;  If the file is an mp3 (or other supported format) file, there's now also a second button labeled [Save Embedded] to embed the lyrics directly into the file itself.&nbsp;  If valid lyrics from the web are found and displayed, you may select this option and a lyric file will be created either matching the name of the file being played in the same directory as the song entry / cuesheet file (if a file), and if [Try to save by song file-name first] box is checked); OR in ~/.config/fauxdacious[-instancename]/lyrics/&lt;artist name&gt;/&lt;song title&gt;.lrc.&nbsp;  For example if playing "myfavoritesong.mp3", the lyric file will be created as "myfavoritesong.lrc".&nbsp;  Normally, the file "~/.config/fauxdacious[-instancename]/lyrics/&lt;Artist Name&gt;/&lt;Song Title&gt;.lrc" (ie. if the song's title is "Song Title", by "Artist Name") will be created if you save the lyrics locally.&nbsp;  If you have the [Cache (save) lyrics to disk?] box checked, in which case, newly-fetched lyrics are automatically saved, as described above.&nbsp;  For CDs, saving locally works the same way, except if the plugin option: [Try to save by song file-name first] box is checked, then the lyrics file will be saved as:&nbsp;   ~/.config/fauxdacious[-instancename]/lyrics/&lt;Disk-ID&gt;/track_#.lrc (# is the track number).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (1):&nbsp;  The [Save Locally] option will be greyed out whenever Fauxdacious has successfully fetched the lyrics from an existing local lyrics (.lrc) file for the current song, or if no valid lyrics were found on the web.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (2):&nbsp;  See also <a href="#34">FAQ #34</a> below for how to now use and save lyrics embedded in Id3/APE tags/Vorbis comments!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">When playing a song, ie. "myfavoritesong.mp3", Fauxdacious will first search for a lyric file ("myfavoritesong.lrc") in the same directory the song is in (for local song files), then for lyrics embedded in an ID3 tag, then for "Song Title.lrc" in ~/.config/fauxdacious[-instancename]/lyrics/&lt;Artist Name&gt;/ (the global lyrics cache).&nbsp;  Failing that, Fauxdacious will seek to pull lyrics from the internet using the Perl FauxdaciousLyricsHelper program (If the Lyrics plugin option:&nbsp;  "[] Fetch lyrics from internet" is checked).  If lyrics are fetched from the web, you will have an option to [Save locally].</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="23" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">23 - FIXED) Why do I get a bunch of "dbus errors" when exiting Fauxdacious when using the Qt interface (Audacious doesn't do this), is it serious?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Update to the latest GIT (v4.0-beta1 or higher) as this is now FIXED!</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="24" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">24) Audacious v4.0 has now made Qt the default and rumor has it that they may be dropping GTK support?  Is Fauxdacious going to follow suit?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">No!&nbsp;  Fauxdacious is for now sticking with GTK as the default and I have no plans to drop GTK support (The M$-Windows version currently only provides the GTK2 version).&nbsp;  If Audacious does, then that's another selling-point for us (However, it's doubtful I'll be able to create my own GTK versions of future (Qt-only) plugins / complex features they may release - patches always welcome!).&nbsp;  A good example of our continuing GTK(2) support vs. theirs is seen in <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://redmine.audacious-media-player.org/issues/1184" target="altwindow" rel="nofollow">Audacious-rejected feature request #1184</a>, where I offered them my code to update the GTK version of their Song-Info Edit window to align with their recent improvements to the Qt version, simply because they wish to depreciate it!&nbsp;  So, you GTK'ers and Windows users especially, should consider going with us!&nbsp;  <B>UPDATE:&nbsp;  In a stunning move, Audacious has suddenly decided to fully support GTK3 now</B> (in addition to GTK2), so I have now merged that into at least the Linux version (v4.2.2-beta1), but not in the latest Windows build, which remains a subset of the GIT version (See <a href="#39">FAQ #39</a> as to why).</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="25" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">25) How do I reverse the sort order when clicking on the playlist column-headers in either of the "non-Winamp-skins" interfaces?&nbsp;  Audacious only sorts them in ascending order.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Click on the same column header a second time and the sort will be reversed and the little sort arrow (on the Qt-side) will reverse direction (Fauxdacious only)!&nbsp;  NOTE:&nbsp;  The sort arrow is not done when sorting via the sort menu, unfortunately.&nbsp;  Also note that the "Entry#" column is simply a "line#" column and does not sort (stays in ascending order 1,2,...)!&nbsp;  You can also sort by bitrate in Fauxdacious.&nbsp;  NOTE:&nbsp;  Due to constraints on how Audacious implements this internally, the sort indicators are now only visible when a single playlist (tab) is displayed, as it would cause confusion if displayed when multiple tabs are shown, since the headers (and sort indicators) are currently fixed for all playlists displayed regardless of how they're sorted!</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="26" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">26) What is Fauxdacious latest version#, and do you follow Audacious versioning?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">We are currently at version# 4.5-devel1, which is up-to-date with <I>most</I> applicable Audacious commits through April/2025.&nbsp;  Yes, I try to stay pretty close to theirs, but even though the "official" version# may often be a bit behind Audacious, it usually contains many, if not most of their latest version#'s GIT commits (after they settle down and I get a chance to test, and often combine them).&nbsp;  Therefore, since we're a rolling release, you may see features here on our GIT that are from a higher Audacious version, before they actually include it in a future official release!</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="27" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">27) Audacious's display of Shoutcast(tm) streams' titles is sometimes ugly (ie. "artist: Artist, title: Title", etc.) and, at best displays both the artist and title in the Title field, but I want the title in the Title field and artist in the Artist field (like the rest of my local music file collection), and put the stream name in the Album field instead.&nbsp;  Also, Audacious has recently added a [Split title into artist and title on chars] option in their lyrics plugin related to this, but I don't see that here.&nbsp;  What should I do?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Fauxdacious already cleans up "ugly" Shoutcast stream titles like this by default to where the title is consistantly displayed as "artist - title" the stream name is put in the Artist field, and the station's URL shows in the Album field.&nbsp;  To change this, there IS a new checkbox option under [Settings].[Playlists] labeled [Split Artist - Title in streams].&nbsp;  Check this box and the Title and Artist fields will be parsed out separately (on the next metadata change) into their respective fields (like normal song files with metadata), and the stream name will be placed in the Album field instead.&nbsp;  This option makes Audacious's new Lyrics plugin options superfious as we believe that this is best handled upstream of the lyrics plugins, eliminating any need for a (redundant) option there!  If the stream also sets the Album field to the actual album name of the song being played, it will be prepended to the stream name in the Album field as:&nbsp;  "album name - stream name" (but this appending does not effect cover art or lyrics lookup using the album name).&nbsp;  It is recommended that this option be checked (turned on) if using the Lyrics plugins when playing streaming radio stations!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (1):&nbsp;  The URL helper that fetches Shoutcast stream urls places the station's website (ie. Tunein, IHeart, Spreaker, etc.) in the Album field.&nbsp;  This will be overwritten by the Album info described above when a stream is played, when this option is checked.&nbsp;  This was done because I believe the stream and album name is more useful being displayed than the station's original website URL.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (2):&nbsp;  aac (libfaad2) (v2.8.8-3.1+) seems to be busted and fails to play many (audio/aacp) streams so that for the time being, we reccomend sticking with or downgrading to libfaad2 v2.8.8-3 as that is the latest and best one that works properly (v2.9.1-1, latest on Buster as of this writing, is known to NOT work)!&nbsp;  <B>UPDATE</B> (11/20):  libfaad2 v2.10.0-1 seems to work properly (and I assume this to be true with subsequent versions)!</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="28" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">28) How can I get the albumart plugin to actually show the album-cover image for songs, especially for streaming radio-stations that change songs dynamically, that include metadata?&nbsp;  Audacious either doesn't show any cover art and Fauxdacious only shows the cover-art image for the streaming station itself, if anything at all.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">This feature has now been added!&nbsp;  A new checkbox under the Albumart plugin labeled: [Look for album art on Musicbrainz.com] (off by default), that, when checked, will attempt to leverage the "CoverArt Helper" script (see [Settings].[Advanced].Cover Art-helper program) to search Musicbrainz.com (and now also Genius.com) first, using the Album, Artist, and Title metadata as keys to search for the album's cover-art image and, if found, will download (cache) it to ~/fauxdacious[-instancename]/albumart/ (dirctory created automatically if needed, but <B>see first NOTE below</B>).&nbsp;  This image will then override any other image displayed in the albumart plugin's image window for the duration of that song's play.&nbsp;  Also go to (general) [Settings].[Advanced], make sure the "Cover Art-helper:" program (just below that) set to "FauxdaciousCoverArtHelper.pl" (.exe in Windows)! It fetches cover-art from the web for all songs, not just for CD/DVDs.&nbsp;  Then go to [Settings].[Song Info] and make sure the "Save unsavable metadata to file" option box is checked.  I also recommend going into the (Input) plugin settings for the Audio CD and DVD plugins and checking the option boxes for "Allow Custom Tag-files".&nbsp;  If no cover-art image is found for a streaming song, the streaming station's icon (if any) will be displayed instead.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE:&nbsp;  To save art images instead (for local song FILES only) under the same name and directory as the corresponding song entry, check the Album-art plugin option "Try to save by song file-name first?".&nbsp;  This will instead, for example save the web-fetched cover-art image as ie. "myfavoratesong.jpg" for "myfavoratesong.mp3" (Also, note (2) applies).&nbsp;  This option is ignored for URL-based entries, ie. streaming stations, podcasts, videos, CDs, etc. (no local directory/file-name).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (2):&nbsp;  For song FILEs (not streams, which can change titles), the internet will not be searched if the song file contains an art image embedded in ID3 tags or (in all cases) if a matching art image file is found (redundant), as we prefer to be good netizens and not waste bandwidth!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (3):&nbsp;  This option may not always work precisely for all streaming stations, as they sometimes misspell artist's names, etc. and Musicbrainz / Genius doesn't always have cover-art for all artists / albums / titles.&nbsp;  Many streaming sites don't even include per-song metadata.&nbsp;  It DOES, however, work when the requirements are all met!&nbsp;  Some streaming stations also provide their own cover-art images embedded in metadata, which will be used before searching Musicbrainz, etc.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (4):&nbsp;  You must have "FauxdaciousCoverArtHelper.pl" (and it's prerequisite Perl modules) installed and specified in [Settings].[Advanced].Cover Art-helper program.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (5):&nbsp;  The dynamic album-cover image only displays in the albumart plugin itself, NOT in the song-info area (non-skinned interfaces), the song-window popup box when hovering over playlist entries, or the Mini-Fauxdacious plugin!&nbsp;  This is due to limitations in the way cover-art is selected, loaded and prioritized with the Audacious/Fauxdacious core.&nbsp;  I also recommend setting the new Fauxdacious Album-Art plugin option "Hide info bar art-icon unless separate album-cover fetched" to checked (on), because (to me) it's slightly ugly having the <I>same</I> image displayed in both the Album-Art plugin and the song-info area next to it (when no cover-art image was fetched).&nbsp;  When an album-cover image IS fetched for a streaming song, then this is not an annoyance, since the album-cover is shown in the plugin window while the station's icon (aka. "channel image") is shown in the song-info area!&nbsp;  To always hide all images in the song-info area, go to [View] and un-check "Show Info Bar Album Art".&nbsp;  NOTE:&nbsp;  In the latest GIT version, the "Hide info bar art icon unless separate album-cover fetched" option is ignored when the Mini-Fauxdacious plugin is active and undocked, since most users will likely wish to hide the main window when using Mini-Fauxdacious, so in that specific case, the info-bar art icon will still be displayed in the Mini-Fauxdacious window.
</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="29" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">29) My global Fauxdacious "user_tag_data" tag file is getting large and cluttered with all the songs and streams for which I've saved cover-art icons and tag metadata for streaming stations and songs in formats that don't support metadata tags in the audio-file itself.&nbsp;  Is there a way I can have Fauxdacious save this data either in a "user_tag_data" file specific to a given album directory or perhaps in a tag-file associated with the specific song/stream, when I use the Fauxdacious [Song Info ...] metadata tag editor?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Yes, this feature has now been added!  Under [Settings].[Song Info].Faudxacious Extras, there's a new drop-down field called "Save tags to:".&nbsp;  You can have Fauxdacious store metadata tags in either a tag-file matching the audio-file itself (ie. "song-file.mp3.tag" for "song-file.mp3") in the same directory as the audio-file; or a common tag-file for the directory itself, or (as has been the case until now) the global tag file (~/.config/fauxdacious[-instancename]/user_tag_data).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (1):&nbsp;  The [Save unsavable metadata to file] box must also be checked to use this Fauxdacious feature!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (2):&nbsp;  These tag files are simple text files editable with your favorite text editor.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (3):&nbsp;  When playing a song, Fauxdacious will search all three locations for metadata regardless of what this option is set too (so long as the [Save unsavable metadata to file] box is checked).
</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="30" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">30) When recording a song from a streaming station, I want to save the metadata the station provides (and / or the album-cover image that the albumart plugin finds for it) while the song is recording - Audacious won't let me (since metadata can't be saved in a stream) and Fauxdacious will just overwrite the streaming station's name, etc. itself in the global "user_tag_data" file, so I have to edit it manually.&nbsp;  Is there an easier way?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Yes, I've modified the [Song Info ...] window such that Fauxdacious now knows that it is currently recording and instead of attempting to save the streaming metadata to the stream (or to user_tag_data for the "stream"), will now attempt to save the metadata tags into the user-tag file under the name of the file being created and being recorded to (NOTE:&nbsp;  you must have the [Song Info].[Save unsavable metadata to file] option checked for this to work)!&nbsp;  To grab the cover art image that album art found (or any other image file of your choice), the "Comment" field in the [Song Info ...] window now has a file-selector icon (Qt has a new [Art Lookup] button.  Select that and a file-selector window will pop up.&nbsp;  Select the "albumart" directory, then click the "Modified" column to sort in descending order of date/time.&nbsp;  This should put the last (current) album-cover image to the top.  Select this image (or one matching your song).&nbsp;  This will populate the Comment field with something like:&nbsp;  "file:///[home-directory/[fauxdacious[-instancename]]/albumart/[your-image-file]", and select the [Save] button in the [Song Info ...] window to save your metadata to the file.&nbsp;  NOTE:&nbsp;  You should have the [Save unsavable metadata to file] box checked in [Settings].[Song Info] under "Fauxdacious Extras" checked before starting the recording!&nbsp;  Also look at the "Save tags to:" dropdown just underneith this option.&nbsp;  There, you can select where to save the tag file containing the Comment (album-art file) and any metadata in cases where the audio-format does not support saving tag metadata (saving the album-art file reference into the audio-file only - even when the audio format supports it - will not work for Fauxdacious to retrieve the cover-art image).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (1):&nbsp;  This new option ONLY applies to LOCAL files or when recording / dubbing.&nbsp;  Tag metadata for streaming stations (URLs), etc. are still always stored in the global tag file (as they have no filesystem directory associated with them) - provided the [Song Info].[Save unsavable metada to file] option is checked.
</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (2):&nbsp;  See latest <a href="#33">FAQ #33</a> below!  This dropdown permits the tag data to be stored in a file:&nbsp;  either a file name matching the audio file name in the same directory as the audio-file itself ("song file-name (if local)"), ie. "song-file.mp3.tag" for "song-file.mp3; or in a common tag file ("user_tag_data.tag") in the same directory as the audio file ("Directory tagfile (if local)"), or in the global tag file ("user_tag_data") in your Fauxdacious config directory (~/.config/fauxdacious[-instancename]) ("Global tagfile").&nbsp;  Other things that affect where the recorded file (and it's associated tag-file) are stored are under the filewriter plugin's configuration screen.&nbsp;  If you have filewriter record to a temporary directory (a directory other than where you intend for the recorded song file to reside or wish to rename the audio-file itself), you may also have to manually edit the tag file (.tag) with your favorite text editor and change the line in "[]"s that corresponds to and points to your file.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (3):&nbsp;  The easiest / recommended way to record/dub is to first record the file, then (when finished) move the file to it's permanent location, load and start playing it, *stop playback!*, then use the [Song Info ...] option to select an album-cover and / or change any tags, as otherwise, if saving while playing, it can induce a permanent annoying blip in the audio playback.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="31" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">31) The Search Tool in Audacious now "monitors song file additions on my file-system and has also added a few cool new features which DON'T seem to be available in Fauxdacious.&nbsp;  How do I activate these in Fauxdacious?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Unfortunately, this is one thing that Audacious now offers that we don't have (yet?).&nbsp;  Because of mounting differences in our code and some design decisions I've made in the past, the labor to merge this will be long and tedious, so for now I haven't implemented it (I know where my music is and when I add a new song file, I can easily add it to a Fauxdacious playlist if I choose - therefore, this seems to me to be a lot of work for little benefit).&nbsp;  If you really want this, "vote" for it by letting me know (but it'll pbly. take a number of "votes")!&nbsp;  Another feature they've added recently (ONLY on the Qt-side - I might add) that I haven't, due to possible issues with some of our extended features is the ability to save [Song Info ...] edits to multiple entries at once.&nbsp;  Therefore, I've decided to forgo adding this.&nbsp;  They seem to have also decided to start letting the GTK side "wilt on the vine" and it is growing more difficult to merge their new (Qt-only) features to the GTK side by myself.
</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="32" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">32) I use the Qt version of Audacious and love the new StreamTuner plugin for selecting IHeartRadio stations, but unlike your helper script that loads the station's icon and other info when adding an IHeartRadio station's website, there is no icon, genre, or title?&nbsp;  Audacious also clears my playlist and sets it to just the station I selected, but I just want to ADD stations to my current playlist!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">The Fauxdacious version of StreamTuner just adds your selected station to your current playlist (without clearing it)!&nbsp;  In v4.1-beta1 I've further modified the StreamTuner plugin to also fetch a selected IHeartRadio station's icon image, title, and genre (the available info) to the station's entry when you select (double-click) a station.&nbsp;  I've also added a Genre column to the station list and filed a feature request (<a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://redmine.audacious-media-player.org/issues/969" target="altwindow" rel="nofollow">#969</a>) to get them to sort and add column-sorting to StreamTuner's lists (as this is currently beyond my coding abilities).&nbsp;  If they fix this, I'll quickly merge it into Fauxdacious.  </span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (1):&nbsp;  I consider this plugin "Experimental" due to the fact that it can crash Fauxdacious (and Audacious).&nbsp;  I've filed a bug report on Audacious to fix it (<a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://redmine.audacious-media-player.org/issues/975" target="altwindow" rel="nofollow">Audacious bug# 975</a>) - I didn't write this plugin, and they seem to be dragging their heels on fixing it, so "Experimental" for now!  NOTE:  Audacious has also now marked this plugin "Experimental" for the same reason.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (2):&nbsp;  The icon-fetching feature only works on IHeartRadio stations at the moment as that those stations are the only ones that provide the underlying icon data from upstream (Icecast and Shoutcast stations currently do not).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE (3):&nbsp;  You must also have the [Settings].[Advanced].[Save unsavable metadata to file] option box checked in order to use this feature.
</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="33" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">33) Most of my music is in formats, like mp3, which contain embedded album-cover images in the file as tags.&nbsp;  Audacious supports displaying them, but NOT adding / changing them, so in Faudacious, the album art accumulates in the albumart directory on my hard drive and I have to keep a large "user_tag_data.tag" file full of references to these files!&nbsp;  Isn't there a better way?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">There is now with v4.1-beta1!&nbsp;  Fauxdacious will now first attempt to embed the data from the image file specified in the Comment field under [Song Info ...] editing (if specified there, ie. "file:///home/.config/fauxdacious/albumart/myalbum.jpg") directly into the song file itself (I know it works for mp3 files (Id3v24 tags) and now wv and ogg files (Wavpack/APE tags and Vorbis comments - v4.1-beta2)).&nbsp;  If successful, then the tag data will no longer be written to the selected "user_tag_data" tag file (unless the file is still being created by record/dub)!&nbsp;  Now your mp3, ogg, and wv, etc. files to which you've added or changed an album-cover will display it in other media players, like VLC without needing to use a separate tag editor!
</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="34" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">34) I like Audacious's Lyrics plugin for displaying song lyrics, but I have files with the lyrics already embedded in the tags, but the Lyrics plugin ignores them and still has to fetch them from the web.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">This feature has now been added in Fauxdacious v4.1-beta1!  In addition, you now have an additional [Save Embedded] option in the Lyrics plugin to embed your fetched lyrics in the tags.&nbsp;  The person requesting this (in <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://redmine.audacious-media-player.org/issues/752" target="altwindow" rel="nofollow">Audacious Feature Request #752</a>) said he knew of only one Linux player that supported this, well, <B>now there are TWO!</B>
</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">In Fauxdacious v4.1.3-beta1, we've now extended this to flac, 
ogg/Vorbis, and wavpack files (previously only available for mp3 files)!  The mp3, flac, vorbis, wavepack, and ffaudio (formats that ffmpeg supports lyrics tags in) plugins now support fetching lyrics embedded in tags in the file.&nbsp;  The ability to save lyrics into embedded tags has also been expanded, but is limited to audio/video files with the following extensions:&nbsp;  .mp3, .ogg, .ogm, .oga, .flac, .fla, and .wv.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="35" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">35) I need the Equalizer window to stay up after I exit and restart Audacious / Fauxdacious, but it doesn't, as I use the non-skinned interfaces.&nbsp;  Instead, I have to pop it back up manually.&nbsp;  Audacious has been asked to fix this, but hasn't yet, can you?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Yes, this is now FIXED (and it remembers where the window was too, just like the popup video window) in v4.1-beta1!
</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="36" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">36) What are these "helper scripts" you keep referencing and how do I install and get them working?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">There are some Fauxdacious features that are very difficult to implement in C/C++ (at least for me, as they use extensive regular expressions and string-manipulations), but anyone who wishes is welcome to attempt to do so and (hopefully) send me the code to merge!&nbsp;  Therefore, I've implemented these features in Perl scripts because that's my main programming language.&nbsp;  There are currently three such scripts:&nbsp;  FauxdaciousUrlHelper.pl, FauxdaciousCoverartHelper.pl, and FauxdaciousLyricsHelper.pl (located in the contrib/ directory)&nbsp;.  NONE are required for using Fauxdacious, but only for unlocking many advanced features not available in Audacious, and must be explicitly specified under [Settings].[Advanced] in order to be used.&nbsp;  All can be user-modified (customized) or even user-replaced!&nbsp;  If replaced, the scripts / programs do not have to be written in Perl, but must accept the same arguments and produce properly-formatted results to work.&nbsp;  All provide some simple user-customization options (explained below) that do not require knowledge of Perl.&nbsp;  Most users will not need this information, but the gory details are described below (tl;dr):
</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">NOTE:&nbsp;  (non-Windows users) - You will need to install some Perl modules from CPAN in order for these "helper" scripts to work (Windows users have precompiled (.exe) versions which have all these modules already compiled in):&nbsp;  The modules are:&nbsp;  StreamFinder (<a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://metacpan.org/pod/StreamFinder" target="altwindow" rel="nofollow">https://metacpan.org/pod/StreamFinder</a>), and LyricFinder (<a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://metacpan.org/pod/LyricFinder" target="altwindow" rel="nofollow">https://metacpan.org/pod/LyricFinder</a>).  Normally, you will need to open a terminal session and install these two Perl modules.  They also have prerequesites, which, if installing through CPAN, you will be offered the opportunity to also install them for you.&nbsp;  Otherwise, install the following additional modules first:&nbsp;  HTML::Entities, HTML::Strip, HTTP::Request, LWP::UserAgent, and URI::Escape.  Installing Perl modules is beyond the scope of this FAQ, for more information, <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://how-to.fandom.com/wiki/How_to_install_PERL_modules" target="altwindow" rel="nofollow">see a how-to here</a>.&nbsp;  To test whether all prerequesites are installed, open a terminal session and run each of the three manually, by entering them as commands (make sure they have executable permissions first!), ie. "FauxdaciousUrlHelper.pl"  They should just display a simple "..usage..." message.&nbsp;  If you get errors about a missing module, install it and try again.&nbsp;  If you wish to use any of the corresponding optional user-configurable ".ini" files, copy them over to your Fauxdacious instance's configuration directory (~/.config/fauxdacious[_instancename]/ or Windows: (usually) C:\Users\&lt;User-ID&gt;\AppData\Local\fauxdacious[-instancename]\).&nbsp;  They come as simple template files with no configuration, but comments on how to add configuration settings.&nbsp;  None are required for getting started or normal usage.
</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">FauxdaciousUrlHelper.pl:&nbsp;  This script provides conversion of certain web URLs into "playable" stream URLs.&nbsp;  The best example of this is Youtube video urls, ie. "https://www.youtube.com/watch?v=1234567".&nbsp;  These are NOT playable as-is, but must be converted to a corresponding streaming URL similar to:  "https://r4---sn-q4flrnez.googlevideo.com/videoplayback?expire=1593642335&amp;ei=_7j8..." that Fauxdacious then plays.&nbsp;  It also accepts streaming radio-station webpage urls (ie. "https://www.iheart.com/live/iheart80s-radio-5060") from various streaming services such as IHeartRadio(tm), Tunein(tm) and others, supported by Perl's "<a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://metacpan.org/pod/StreamFinder" target="altwindow" rel="nofollow">StreamFinder</a>" module (written for this purpose by your's truly), which are displayed when searching these sites for streaming stations.&nbsp;  Given the site's webpage for a given station, it will be converted into the best stream url for that station and played (along with certain metadata associated with the station including any "icon" associated with it to be displayed as the "cover-art" image).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Optional User-editable configuration text file:&nbsp;  FauxdaciousUrlHelper.ini (see comments inside file).&nbsp;  The main user-configurable feature is an array (default empty) that the user can add urls for servers that provide mp3 or other audio files for play or download, but which seem to have problems timing out when a stream is played in real time from the server instead of downloaded first to the user's hard drive.&nbsp;  If a user discovers this problem with a frequently-accessed server, one can add that server's url to this list and Fauxdacious will instead first download the audio file to the /tmp directory on the user's hard disk before opening and playing the downloaded file.&nbsp;  An example known to the author to have this issue is "//www.soulwinning.info".&nbsp;  To add servers to this list, edit the (text editable) FauxdaciousUrlHelper.ini file in contrib/ and copy it to ~/.config/fauxdacious[-instancename]/.&nbsp;  For Windows users, the file is in fauxdacious/bin/, copy it to C:\Users\&lt;User-ID&gt;\AppData\Local\fauxdacious[-instancename]\</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">FauxdaciousCoverArtHelper.pl:&nbsp;  This script enables Fauxdacious to fetch album art images for songs, streams, CDs and DVDs playing that contain artist, title, and album metadata tags from MusicBrainz.com / Genius.com / Musicmatch.com (for the albumart plugins, if the [fetch albumart from the web] option is checked) (NOTE:&nbsp;  Both Genius and MusicBrainz are now searched).  It also handles cleanup of temporary "preview" images and "channel icon" images downloaded from youtube-videos, podcasts, etc. when Fauxdacious is restarted with the "-D" option.&nbsp;  This helper can also fetch metadata tag data for the individual tracks of a CD.</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Optional User-editable configuration text file::&nbsp;  FauxdaciousCoverArtHelper.ini (see comments inside file).&nbsp;  The albumart plugins will attempt to fetch an album-cover image from the internet every time the song title (metadata) changes (to a new song)unless a cover art image for the song are already cached locally.&nbsp;  Most streaming stations only change the metadata when a song changes, but some will change (reset) the metadata to the station's own metadata near the end of a song, or during commercials (to advertise the station itself, I guess), then change to the next song title later when a new song begins to play.&nbsp;  Fauxdacious will display the STATION'S icon and metatata (album and title) briefly between songs in these cases.&nbsp;  The side effect is that the cover-art helper script will end up re-"hitting" the internet for (the usually non-existant) album-art image for that station between EVERY song streamed, which is very wasteful and bad netiquette!&nbsp;  For such stations that present this behaviour that the user listens to regularly, simply add the station's default <B>"album"</B> and <B>"title"</B> fields separated by a "|" to FauxdaciousCoverArtHelper.ini, so that it will be skipped and no internet search will be made.&nbsp;  An example station known to do this is called "IHeart '80s" (https://www.iheart.com/live/iheart80s-radio-5060/) with the station's default metadata:&nbsp;  "IHeart 80s|iHeart80s Radio" (Probably all "IHeart-sponsored commercial-free streams" are similar).&nbsp;  It's not necessary to do this, but can make album-art fetching more efficient and reduce overusage of MusicBrainz.com (and help save the internet)!&nbsp;  To add such stations to this list, edit the (text editable) FauxdaciousCoverArtHelper.ini file in contrib/ and copy it to ~/.config/fauxdacious[-instancename]/.&nbsp;  For Windows users, the file is in fauxdacious/bin/, copy it to C:\Users\&lt;User-ID&gt;\AppData\Local\fauxdacious[-instancename]\</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">FauxdaciousLyricsHelper.pl:&nbsp;  This script enables Fauxdacious to fetch lyrics from a variety of lyrics websites (for the lyrics plugins).&nbsp;  This was added in October, 2020 when it was found that the lyricwiki site "lyrics.fandom.com" stopped supporting lyric queries used by Audacious / Fauxdacious, and it appeared at the time that Audacious may not want to find another site and fix it.&nbsp;  I decided to create a Perl helper using a new CPAN module called <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://metacpan.org/pod/LyricsFinder" target="altwindow" rel="nofollow">LyricsFinder</a>, which I wrote for this purpose which uses site-specific submodules (included) to fetch lyrics from different sites.&nbsp;  Fauxdacious uses these modules through FauxdaciousLyricsHelper.pl to randomly search the various installed / supported sites for lyrics.&nbsp;  NOTE:&nbsp;  The user must specify this helper under [Settings].[Avanced] (see bottom of window).&nbsp;  Non-Windows users must also install / update LyricsFinder from CPAN.&nbsp;  If lyrics.fandom.com is ever reactivated, then the Fauxdacious lyrics plugins will then also work without this helper script specified!&nbsp;  NOTE:&nbsp;  Windows users using the pre-installed pre-compiled binary versions of the helper scripts only need to add the helper binaries (.exe) to the three helper fields under [Settings].[Advanced]!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Optional User-editable configuration text file:&nbsp;  FauxdaciousLyricsHelper.ini (see comments inside file).&nbsp;  The lyrics plugins will attempt to fetch lyrics from the internet every time the song title (metadata) changes (to a new song) unless lyrics for the song are already cached locally.&nbsp;  Most streaming stations only change the metadata when a song changes, but some will change (reset) the metadata to the station's own metadata near the end of a song, or during commercials (to advertise the station itself, I guess), then change to the next song title later when a new song begins to play.&nbsp;  Fauxdacious will display the STATION'S icon and metatata (album and title) briefly between songs in these cases.&nbsp;  The side effect is that the lyrics helper script will end up re-"hitting" the internet for (the usually non-existant) lyrics for that station between EVERY song streamed, which is very wasteful and bad netiquette!&nbsp;  For such stations that present this behaviour that the user listens to regularly, simply add the station's default <B>"artist"</B> and <B>"title"</B> fields separated by a "|" to FauxdaciousLyricsHelper.ini, so that it will be skipped and no internet search will be made.&nbsp;  An example station known to do this is called "IHeart '80s" (https://www.iheart.com/live/iheart80s-radio-5060/) with the station's default metadata:&nbsp;  "iHeartRadio|iHeart80s Radio" (Probably all "IHeart-sponsored streams" are similar).&nbsp;  You can also prevent repeated lyric fetching for specific albums too:&nbsp;  Specify the album name on a line the same way as above (case-sensitive) without the separating bar ("|"), which ommitted assumes it's an album name rather than an artist|title combo.&nbsp;  It's not necessary to do this, but can make lyric fetching more efficient (and help save the internet)!&nbsp;  To add such stations to this list, edit the (text editable) FauxdaciousLyricsHelper.ini file in contrib/ and copy it to ~/.config/fauxdacious[-instancename]/.&nbsp;  For Windows users, the file is in fauxdacious/bin/, copy it to C:\Users\&lt;User-ID&gt;\AppData\Local\fauxdacious[-instancename]\.&nbsp;  You can also change your "user-agent" string sent to the lyrics sites (if needed, see the comments in the .ini file - the default is currently:&nbsp;  "Mozilla/5.0 (X11; Linux x86_64; rv:80.0) Gecko/20100101 Firefox/80.0")</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="37" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">37) How do I take advantage of Timestamped lyrics and have them highlight the current line while playing?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">This is a new Fauxdacious feature that Audacious does not currently offer (this addresses <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://github.com/audacious-media-player/audacious/issues/1558" target="altwindow" rel="nofollow">Audacious feature-request #1558</a>)!&nbsp;  To display timestamped lyrics that dynamically scroll, highlighting each line as the song plays, there is a new option in the lyrics plugins labeled "Enable scrolling lyric sync. by timestamps".&nbsp;  If checked, and the lyrics contain proper LRC-formatted timestamps, only a few lines are displayed with the currently-playing line bolded, and the lyrics scroll dynamically as the song plays (controlled by the timestamp values).&nbsp;  Note:&nbsp;  This only works for song files and CD tracks, <B>Not</B> streaming stations that dynamically change metadata between songs and continue to increment the play-time while streaming!&nbsp;  This is due to there being no practical way to calculate the proper timing since metadata is usually received and set in the stream seconds after the song starts playing, or for starting play when the station is in the middle of a song (can't know how far into the song play started).&nbsp;  If the new option is not checked, or when playing a streaming station, then all lyrics are displayed fully, as is (and always have been).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Users who wish to record/dub songs from streaming stations and need to obtain timestamped lyrics from the web to go with their recording should do the following in order to get and save timestamped lyrics (when available):&nbsp;  1) (Lyrics plugin settings):&nbsp;  Check the "Enable scrolling lyric sync..." option and select "Timestamped, Plain-text" option.&nbsp;  2) (while streaming), start recording a desired song as quickly as possible after the title changes to a desired song (Note:  non-timestamped lyrics will likely be fetched & presented).&nbsp;  3) Stop recording as soon as the song ends or title changes again.&nbsp;  4) Add the newly-recorded song file to a playlist and begin playing.&nbsp;  5) The cashed, usually non-timestamped lyrics will be displayed.&nbsp;  6) While playing select [Refresh] in the Lyrics plugin (if the fetched lyrics do not show timestamp values for each line).&nbsp;  This should try fetching new lyrics first from lrclib.com (the only supported site that currently supports returning timestamped lyrics).&nbsp;  If successful, the new lyrics should scroll, but will likely be delayed (off by) a few seconds!&nbsp;  7) Restart play and try to estimate the delay between the words and the corresponding lyrics line(s).&nbsp;  8) Stop play, and edit the saved lyrics file and add a new separate [offset] line at the top of the lyrics file, ie. if the delay is 4 seconds, specify:  "[offset:-4000]".&nbsp;  9) Replay the song and adjust offset as needed until satisfied. (I know of no way to automate the calculation of this varying delay!)</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="38" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">38) My Album Art and / or Lyrics plugin is still not working!  What am I missing?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">These plugins both require Perl "Helper" scripts in order to function properly.&nbsp;  See <a href="#36">FAQ #36</a>, particularly the first "NOTE" paragraph, for more detail on these scripts and how to set them up properly (including installing the prerequisite Perl modules).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">The Album Art plugin requires FauxdaciousCoverArtHelper.pl (.exe in Windows) installed and working to fetch album cover-art from the internet, along with the (General) Album Art settings plugin option "Look for album art on Musicbrainz.com" option box checked.&nbsp;  Also go to (general) [Settings].[Advanced], make sure the "Cover Art-helper:" program (just below that) set to "FauxdaciousCoverArtHelper.pl" (.exe in Windows).&nbsp;  It fetches cover-art from the web for all songs, not just for CD/DVDs.&nbsp;  Then go to [Settings].[Song Info] and make sure the "Save unsavable metadata to file" option box is checked.&nbsp;  I also recommend going into the (Input) plugin settings for the Audio CD and DVD plugins and checking the option boxes for "Allow Custom Tag-files".</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">The Lyrics plugin requires FauxdaciousLyricsHelper.pl (.exe in Windows) installed and working to fetch lyrics from the internet, along with the (General) LyrickWiki plugin settings option "Fetch lyrics from internet" option box checked.&nbsp;  I recommend also checking the "Cache (save) lyrics to disk" option too.&nbsp;  If you did the above, the "Helper:" field should also contain the FauxdaciousLyricsHelper script.&nbsp;  I also strongly recommend checking the [Settings].[Playlist]."Split Artist - Title in streams" option box if you play streaming radio stations for more successful dynamic lyric fetching for their streaming songs.
</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="39" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">39) Audacious now supports Qt on Windows, why doesn't Fauxdacious?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">These are recent Audacious changes.&nbsp;  We do not (yet?) support Qt on Windows because this would be a massive undertaking to totally overhaul our build environment on Windows.&nbsp;  Unfortunately, as I've seen very little uptake of Fauxdacious on Windows (Drop me an email if you're using Fauxdacious on Windows and let me know people are actually USING it!!!), it doesn't seem worth the massive effort at the moment (and I don't even use Windows currently myself, except to build Fauxdacious).&nbsp;  As far as on-the-fly switching between GTK and Qt, <s>this is currently not possible because unlike Audacious, we start up a hidden SDL video window at program startup to support the Video Display (Visualization) plugin (that Audacious doesn't have!), which must be created on program startup for either GTK or Qt.&nbsp;  Perhaps some day</s>.  UPDATE:&nbsp;  As of v4.3-beta1 (Linux/Unix versions) hot-switching between GTK* and Qt are now fully supported the same way as in Audacious!&nbsp;  NOTE:&nbsp;  Not available in Windows version due to Qt not being supported for now (see above).&nbsp;  For maximum stability, even though not required, I personally recommend stopping playback before switching (I haven't stress-tested enough).&nbsp;  Either way, playback is stopped and must be manually be restarted with the [Play] button, though the cursor does remain on the same entry (as in Audacious).</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="40" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">40) How can I briefly override normal song-advance (next song, next shuffle, etc.) order in the currently-playing playlist to instead play one or more selected songs next?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">There's a new checkbox under [File].[Settings].[Playlist] under "Fauxdacious Extras" labeled "Advance to next selected entry in list", and check it.&nbsp;  Then, in your currently-playing playlist, select (highlight) one or more other song-entries using [Ctrl]+mouse button 1.  Then either wait for current song to complete or manually advance with [&gt;&gt;|] (Next) button, and Fauxdacious will advance to the next selected (highlighted) song below (or wrap to the first one above if none REGARDLESS of whether the [Shuffle] or [Repeat] options are selected.&nbsp;  Play will then continue in top-to-bottom order through the highlighted entries until none but the currently-playing one remain highlighted.&nbsp;  At that point, normal advance rules again apply.&nbsp;  NOTE:&nbsp;  This does not affect the [|&lt;&lt;] (Previous) button as this advance rule only applies one-way!</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="41" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">41) <B>*NEW!*</B> How can I add a new entry, then jump directly to it next?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">There's a new checkbox under [File].[Settings].[Playlist] under "Fauxdacious Extras" labeled "On add, select 1st entry added", and check both it AND the option just above it labeled "Advance to next selected entry in list".&nbsp;  You can then add a URL, file, directory, or list of files, and the URL, or the first file added will be selected (highlighted).&nbsp;  Assuming you haven't highlighted other entries (the currently-playing one is always highlighted), pressing [Next] ([&gt;&gt;] or [Alt-Down], or [Ctrl-B] in Mini-Fauxdacious will advance to your most-recently added entry.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="42" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">42) What is this "Mini-Fauxdacious" plugin under General Plugins (Audacious doesn't offer this)?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">It's a (Fauxdacious-only) plugin to both address <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://redmine.audacious-media-player.org/issues/1116" target="altwindow" rel="nofollow">Audacious feature request# 1116</a> and is a (better, imho) alternative to Audacious's "Moonstone" plugin.&nbsp;  It hides the "Info Bar" area (icon, song title, artist, album, and sound-meter graph) normally at the bottom part of the main playlist window and instead displays it as a separate but dockable window.&nbsp;  You can then minimize/iconify/hide the main playlist window to effectively have just a single "minimalist Fauxdacious" window displayed.&nbsp;  It accepts keyboard focus and includes keyboard shortcuts for volume-control and many of the basic playback-controls found in the playlist window itself for basic playback control even when the (larger) playlist window is iconified or completely hidden, along with a popup tooltip balloon listing the valid keys/actions.&nbsp;  It can also be docked to the playlist window (top or bottom) in lieu of the "Info Bar".&nbsp;  When displayed undocked, the Info Bar in the main playlist window is hidden and the playlist expands downward to fill the space normally used by the Info Bar area allowing display of more song-entries.&nbsp;  It can also be invoked directly from the playlist window by double-clicking on the Info Bar area (or [Alt-[m]] in the playlist window).&nbsp;  This is also my answer to Audacious's "Moonstone" minimalist interface option, which I do not include due to the current inability to access the menu or revert back to the default interface without exiting Audacious and manually editing your Audacious config. file!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">We've also recently added a toolbar option to the bottom of the Qt version (and now just recently, the GTK versions also) of the Mini-Fauxdacious window (see the new plugin-configuration options), which (when undocked) can be toggled (shaded) on and off by simply double-clicking on the Mini-Fauxdacious window itself or pressing the <B>"t"</B> key on the keyboard when focused.&nbsp;  This toolbar mimics the one in the main Fauxdacious playlist window, but is thinner heightwise (in Qt version) in keeping with the minimalist footprint goal.&nbsp;  The user can also select either the normal themed look or the color-scheme used by the actual Audacious Moonstone plugin (except in the old GTK-2 version).&nbsp;  Unlike Moonstone, users can also choose from among several options which buttons / features they want shown on the toolbar!&nbsp;  Mini-Fauxdacious closely resembles Moonstone in appearance sans the playlist (which here is still available by unhiding / de-iconifying the main-window), since it's a general dock-plugin rather than a standalone interface plugin.&nbsp;  If one looks at <a style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;color:#B0B0B0;text-decoration:underline;" href="https://github.com/audacious-media-player/audacious-plugins/commit/3b4a1e32d1335386e4297b402a5e94c652cd1a6f">their original Moonstone commit</a> on Audacious's GitHub, one will see a cool prototype image posted near the bottom in the discussion-thread that closely resembles and inspired these Mini-Fauxdacious improvements, along with an image of their released version just below it, along with my comment concerning the inability to exit it (which they never responded to)!</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">Note:&nbsp;  We have now also merged in the Moonstone (Qt) plugin itself after much refactoring to fix the issues I had with it and making it work much better (but we're also retaining our Mini-Fauxdacious plugin as-is, and remains the preferred option).&nbsp;  If you like Moonstone (or prefer it over Mini-Fauxdacious), I believe you'll really like our version of it (At Fauxdacious, we believe in choices)!&nbsp;  Note2:&nbsp;  You'll likely have to go into the moonstone subdirectory and build it separately for now (make; sudo make install) to make it available (as is also the case in Audacious, I believe)</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="43" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">43) How do I start Fauxdacious and load more than one playlist or split command-line entries into multiple playlists?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;"><B>(NEW!)</B>&nbsp;  Use the new Fauxdacious command-line option:&nbsp;  -a, --add-list, or --add-list="playlist name" one (or more) times between playlists or entries, for example:</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><code style="font-family:Lucida Console, Andale Mono, FreeMono, Courier;font-size:16px;font-weight:normal;">fauxdacious [-other_options] <I>entry1 entry2</I> -a <I>entry3 entry4</I></code></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">This command would (depending on other playlist options) add <I>entry1</I> and <I>entry2</I> to the current (or a new "Now Playing") playlist, then create a new separate "New Playlist" playlist and load <I>entry3</I> and <I>entry4</I> into it.&nbsp;  A trailing "-a" (with no entries following it) will add an extra blank playlist tab.&nbsp;  Each new playlist created will have the default name "New Playlist" (unless it's subsequent entry is a playlist containing a playlist name).&nbsp;  If using the long form of the option, you can optionally include an argument specifying a playlist name to use (the default is "New Playlist").&nbsp;  This optional name is a default, but if the next entry is a playlist file containing a playlist title, then that will override any name specified here, as is normal when importing playlist files.</span></td>
</tr>
<tr>
<td align="left" valign="top" width="100%"><span id="44" style="font-family:Arial, Helvetica, sans-serif;font-size:19px;font-weight:bold;">44) What are these "channel" images that appear in addition to the Album-art plugin image displayed?</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;">When playing a streaming radio station, podcast, or video, the URL-helper is often able to fetch both an image associated with the specific podcast or video and an image (usually an icon) associated with the "channel" producing the podcast or video.&nbsp;  In the case of streaming stations, this will be the streaming station's icon.&nbsp;  Normally, for streaming stations, the Album-art plugins will then fetch an album-cover for whatever song is currently playing on the station.&nbsp;  Fauxdacious allows displaying of both when the Album-art plugin is active.&nbsp;  The Album-art plugin (if active) will normally display the specific album-cover or the specific podcast / video image.&nbsp;  If this second image is also found, it is referred to as a "channel image" and will be displayed in the info-bar (or Mini-Fauxdacious, if active).</span></td>
</tr>
<tr>
<td align="justify" valign="top" width="100%"><span style="font-family:Times New Roman, Times, FreeSerif, serif;font-size:19px;font-weight:normal;"><B>*NEW!*</B>&nbsp;  A new "channel art" option has been added in v4.2-final in the Song Info settings window:&nbsp;  "Directory Channel-icon image (filename[.ext] only)?" which allows specifying an image file-name (without path, since the playing song's path will be prepended to it), which, if it appears in the directory of a local song-entry file, will be used as the second ("channel") icon image, similar to the station / video or podcast channel icon (as discussed in the previous paragraph), if the Album-art plugin is active.&nbsp;  If not, and the song-entry does not have a cover-art image associated with it, this will instead be used as a "fallback" image for that entry.&nbsp;  The file-name specified may either be a simple name, such as "channel", in which Fauxdacious will check for either "channel.png", "channel.jp[e]g", or "channel.gif".&nbsp;  If specified with an extension, ie. "channel.png", then only that image file will be checked for.&nbsp;  The same file-name must be used in all directories for which one wishes to have a channel icon, though the extensions may vary (unless specified), and of course they can be different images.&nbsp;  This differs from the other Album cover art file options under the Song Info settings, as it is not loaded / used until after any web-searches by the Album-art plugins (if active).</span></td>
</tr>
<tr>
<tr>
</tbody>
</table>
